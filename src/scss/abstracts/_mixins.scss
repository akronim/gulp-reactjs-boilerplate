// -------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -------------------------------------------------------

//Padding mixin
@mixin padding($top, $right, $bottom, $left) {
  padding-top: $top;
  padding-right: $right;
  padding-bottom: $bottom;
  padding-left: $left;
}
//Margin mixin
@mixin margin($top, $right, $bottom, $left) {
  margin-top: $top;
  margin-right: $right;
  margin-bottom: $bottom;
  margin-left: $left;
}
//Usage definition
//@include padding(top, right, bottom, left);
//@include margin(top, right, bottom, left);

//Usage 1
//@include padding(1px, 2px, 3px, 4px,);
//@include margin(1px, 2px, 3px, 4px);
//Output 1
// padding: 1px 2px 3px 4px;
// margin: 1px 2px 3px 4px;

//Usage 2 (with null properties)
//@include padding(1px, null, 3px, 4px);
//@include margin(1px, 2px, null, 4px);
//Output 2
// padding-top: 1px;
// padding-bottom: 3px;
// padding-left: 4px;
// margin-top: 1px;
// margin-right: 2px;
// margin-left: 4px;

//Animation mixin setup
@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @-moz-keyframes #{$animation-name} {
    @content;
  }
  @-ms-keyframes #{$animation-name} {
    @content;
  }
  @-o-keyframes #{$animation-name} {
    @content;
  }
  @keyframes #{$animation-name} {
    @content;
  }
}
@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};
}
//Usage
// // Define animation name, and properties
// @include keyframes(fade-out) {
//   0% {
//     opacity: 1;
//   }
//   90% {
//     opacity: 0;
//   }
// }
// // Add animation to element
// .element {
//   width: 100px;
//   height: 100px;
//   background: black;
//   @include animation("fade-out 5s 3");
// }

// Clearfix mixin
@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}
// Usage
// .cf {
//   @include clearfix;
// }

// Define vertical, horizontal, or both position
@mixin center($position) {
  position: absolute;

  @if $position == "vertical" {
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
  } @else if $position == "horizontal" {
    left: 50%;
    -webkit-transform: translateX(-50%);
    -ms-transform: translateX(-50%);
    transform: translate(-50%);
  } @else if $position == "both" {
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
  }
}
// Using the mixin
//   .foo {
//     @include center(both);
//   }
//   .foo-parent {
//     position: relative;
//   }
